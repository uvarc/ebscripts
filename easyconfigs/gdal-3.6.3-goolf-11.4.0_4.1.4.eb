easyblock = 'CMakeMake'

name = 'gdal'
version = '3.6.3'

homepage = 'https://www.gdal.org'
description = """GDAL is a translator library for raster geospatial data formats that is released under an X/MIT style
 Open Source license by the Open Source Geospatial Foundation. As a library, it presents a single abstract data model
 to the calling application for all supported formats. It also comes with a variety of useful commandline utilities for
 data translation and processing."""

toolchain = {'name': 'goolf', 'version': '11.4.0_4.1.4'}
toolchainopts = {'usempi': True}

source_urls = ['https://download.osgeo.org/gdal/%(version)s/']
sources = [SOURCELOWER_TAR_XZ]
patches = ['GDAL-3.6.2_fix-python-CC-CXX.patch']

builddependencies = [
    ('cmake', '3.24.3'),
    #('pkgconf', '1.9.3'),
    ('bison', '3.8.2', '', SYSTEM),
]

osdependencies = [
    ('pcre'),
]

dependencies = [
    ('python', '3.11.4'),
    ('netcdf', '4.9.2'),
    #('expat', '2.4.9'),
    ('geos', '3.11.2'),
    ('sqlite', '3.41.2', '', SYSTEM),
    #('libxml2', '2.10.3'),
    #('libpng', '1.6.38'),
    #('libjpeg-turbo', '2.1.4'),
    ('jasper', '4.0.0'),
    #('LibTIFF', '4.4.0'),
    ('zlib', '1.2.13'),
    ('curl', '8.4.0'),
    ('proj', '9.2.0'),
    ('libgeotiff', '1.7.1'),
    #('SciPy-bundle', '2023.02'),
    ('hdf5', '1.12.2'),
    ('hdf', '4.2.16'),
    ('armadillo', '12.0.1'),
    ('cfitsio', '4.2.0'),
    ('zstd', '1.5.2'),
    ('giflib', '5.2.1'),
    ('json-c', '0.16'),
    #('Xerces-C++', '3.2.4'),
    ('pcre2', '10.42'),
    #('OpenEXR', '3.1.5'),
    #('Brunsli', '0.1'),
    #('Qhull', '2020.2'),
    #('LERC', '4.0.0'),
    ('openjpeg', '2.5.0'),
    #('krb5', '1.20.1'),
]

# common configopts for static, shared library builds
_base_configopts = ' '.join([
    '-DGDAL_USE_INTERNAL_LIBS=OFF',
    '-DArrow_DIR=$EBROOTARROW',
    '-DGEOTIFF_INCLUDE_DIR=$EBROOTLIBGEOTIFF/include',
    '-DGIF_INCLUDE_DIR=$EBROOTGIFLIB/include',
    '-DJSONC_DIR=$EBROOTJSONMINC',
    '-DOPENSSL_ROOT_DIR=$EBROOTOPENSSL',
    '-DPython_ROOT=$EBROOTPYTHON',
])

# iterative build for both static and shared libraries
configopts = [' '.join([_base_configopts, x]) for x in ['-DBUILD_SHARED_LIBS=OFF', '']]

modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

sanity_check_paths = {
    'files': ['lib/libgdal.a', 'lib/libgdal.%s' % SHLIB_EXT],
    'dirs': ['bin', 'include', 'lib/python%(pyshortver)s/site-packages']
}

moduleclass = 'data'
