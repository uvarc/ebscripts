# Ruoshi Sun
# 2025-09-08
easyblock = 'CMakeNinja'

name = 'qt6'
version = '6.9.2'

homepage = 'https://qt.io/'
description = "Qt is a comprehensive cross-platform C++ application framework."

toolchain = {'name': 'GCC', 'version': '11.4.0'}
# disabling use of -ftree-vectorize is required to avoid compilation failures on some systems (e.g. Intel Skylake X)
toolchainopts = {'vectorize': False}

source_urls = [
    'https://download.qt.io/official_releases/qt/%(version_major_minor)s/%(version)s/single/',
    'https://download.qt.io/archive/qt/%(version_major_minor)s/%(version)s/single/',
    'https://download.qt.io/new_archive/qt/%(version_major_minor)s/%(version)s/single/',
]
sources = ['qt-everywhere-src-%(version)s.tar.xz']
patches = [
    #'Qt6-6.6.3_fix_OF-Gentoo.patch',
    #'Qt6-6.7.2_fix_cpu_features.patch',
    #'Qt6-6.5.2_fix_too_long_filenames.patch',
]

builddependencies = [
    #('binutils', '2.42'),
    #('pkgconf', '2.2.0'),
    ('cmake', '4.0.0', '', SYSTEM),
    ('Ninja', '1.13.1', '', SYSTEM),
    # deps for QtWebEngine
    ('bison', '3.8.2', '', SYSTEM),
    #('flex', '2.6.4'),
    ('gperf', '3.3', '', SYSTEM),
    ('re2c', '3.0', '', SYSTEM),
]
dependencies = [
    ('double-conversion', '3.2.1', '', SYSTEM),
    ('glib', '2.76.1'),
    ('pcre2', '10.42'),
    ('libpng', '1.6.39'),
    ('libtiff', '4.7.0'),
    ('libwebp', '1.5.0'),
    ('jasper', '4.2.8'),
    ('harfbuzz', '5.3.1'),
    ('sqlite', '3.41.2', '', SYSTEM),
    #('graphite2', '1.3.14'),
    ('assimp', '6.0.2'),  # for Qt 3D
    ('ffmpeg', '8.0', '', SYSTEM),
    ('x11', '20230603'),
    ('fontconfig', '2.14.2'),
    ('zlib', '1.2.13'),
    ('python', '3.11.4'),
    ('freetype', '2.13.2'),  # WebEngine
    ('dbus', '1.15.4'),
    ('libevent', '2.1.12'),  # WebEngine
    ('libglu', '9.0.2'),
    ('libjpeg-turbo', '3.0.1'),  # WebEngine
    ('nss', '3.85'),  # WebEngine, required
    ('snappy', '1.1.9', '', SYSTEM),  # WebEngine
    #('OpenSSL', '3', '', SYSTEM),
    ('ICU', '77.1'),
    ('nodejs', '24.5.0', '', SYSTEM),
    # ('gRPC', '1.52.2'),  # WebEngine needs older Abseil/gRPC/protobuf
]

parallel = 16

preconfigopts = 'sed -i "s/MultiMedia/Multimedia/g" ../qt-everywhere-src-%(version)s/qtcharts/CMakeLists.txt && '

preconfigopts += 'sed -i "23i set(Python3_ROOT_DIR \\$ENV{EBROOTPYTHON})" '
preconfigopts += '../qt-everywhere-src-%(version)s/qtwebengine/src/gn/CMakeLists.txt && '  # Typo

# Ninja uses all visible cores by default, which can lead to lack of sufficient memory;
# so $NINJAFLAGS is set to control number of parallel processes used by Ninja;
# note that $NINJAFLAGS is not a generic thing for Ninja, it's very specific to the Qt6 build procedure
preconfigopts += ' export NINJAFLAGS="-j%(parallel)s" && '
prebuildopts = ' export NINJAFLAGS="-j%(parallel)s" && '

configopts = "-Wno-dev -DFEATURE_qtpdf_build=OFF -DQT_AVOID_CMAKE_ARCHIVING_API=ON "
configopts += "-DPython3_ROOT_DIR=$EBROOTPYTHON -DBUILD_qtwayland=OFF "

# V8-Context-Snapshot needs to be disabled on aarch64
# as it fails with "./v8_context_snapshot_generator failed with exit code -5"
# which suggests a potential segmentation fault or memory-related issue
if ARCH == "aarch64":
    configopts += "-DFEATURE_webengine_v8_context_snapshot=OFF "

# Removed from Qt6.0.0 but may be added back in the future
# configopts += '-DBUILD_qtgamepad=OFF '  # Does not work on CentOS 7

sanity_check_paths = {
    'files': ['bin/qmake6', 'lib/libQt6Core.%s' % SHLIB_EXT], # 'lib/libQt6WebEngineCore.%s' % SHLIB_EXT],
    'dirs': ['include/QtCore'], # 'include/QtWebEngineCore'],
}

sanity_check_commands = ['qmake6 --help']

moduleclass = 'devel'
