easyblock = 'ConfigureMake'

name = 'ucc-cuda'
version = '1.3.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://www.openucx.org/'
description = """UCC (Unified Collective Communication) is a collective
communication operations API and library that is flexible, complete, and 
feature-rich for current and emerging programming models and runtimes.

This module adds the UCC CUDA support.
"""

toolchain = {'name': 'GCC', 'version': '14.2.0'}
toolchainopts = {'pic': True}

source_urls = ['https://github.com/openucx/ucc/archive/refs/tags']
sources = ['v%(version)s.tar.gz']
patches = [
    'UCC-CUDA-1.2.0_link_against_existing_UCC_libs.patch',
]

builddependencies = [
    #('binutils', '2.40'),
    #('Autotools', '20220317'),
]

dependencies = [
    ('ucc', version),
    ('CUDA',  '12.8.0', '', SYSTEM),
    ('ucx-cuda', '1.18.0', '-CUDA-%(cudaver)s'),
    ('NCCL', '2.22.3', '-CUDA-%(cudaver)s'),
]

preconfigopts = "./autogen.sh && "

buildopts = '-C src/components/mc/cuda V=1 && make -C src/components/tl/nccl V=1'
installopts = '-C src/components/mc/cuda && make -C src/components/tl/nccl install'

sanity_check_paths = {
    'files': ['lib/ucc/libucc_mc_cuda.%s' % SHLIB_EXT, 'lib/ucc/libucc_tl_nccl.%s' % SHLIB_EXT],
    'dirs': ['lib']
}

sanity_check_commands = ["ucc_info -c"]

modextrapaths = {'EB_UCC_EXTRA_COMPONENT_PATH': 'lib/ucc'}

moduleclass = 'lib'
