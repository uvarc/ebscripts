name = 'OpenMPI'
version = '4.1.4'

homepage = 'https://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'NVHPC', 'version': '23.7'}
toolchainopts = {'pic': True}

source_urls = ['https://www.open-mpi.org/software/ompi/v%(version_major_minor)s/downloads']
sources = [SOURCELOWER_TAR_BZ2]
patches = [
    'OpenMPI-4.1.1_build-with-internal-cuda-header.patch',
    'OpenMPI-4.1.1_opal-datatype-cuda-performance.patch',
]
checksums = [
    '92912e175fd1234368c8730c03f4996fe5942e7479bb1d10059405e7f2b3930d',  # openmpi-4.1.4.tar.bz2
    # OpenMPI-4.1.1_build-with-internal-cuda-header.patch
    '63eac52736bdf7644c480362440a7f1f0ae7c7cae47b7565f5635c41793f8c83',
    # OpenMPI-4.1.1_opal-datatype-cuda-performance.patch
    'b767c7166cf0b32906132d58de5439c735193c9fd09ec3c5c11db8d5fa68750e',
]

builddependencies = [
    #('pkgconf', '1.8.0'),
    #('perl', '5.34.1'),
    #('Autotools', '20220317'),
]

local_comp = ('GCC', '11.4.0')

dependencies = [
    ('zlib', '1.2.13', '', local_comp),
    ('hwloc', '2.8.0', '', local_comp),
    ('libevent', '2.1.12', '', local_comp),
    ('ucx', '1.15.0', '', local_comp),
    ('ucx-cuda', '1.15.0', '', local_comp),
    ('libfabric', '1.16.1', '', local_comp),
    ('pmix', '4.2.6', '', local_comp),
    ('ucc', '1.2.0', '', local_comp),
    ('ucc-cuda', '1.2.0', '-CUDA-12.2.2', local_comp),
]

# Update configure to include changes from the "internal-cuda" patch
# by running a subset of autogen.pl sufficient to achieve this
# without doing the full, long-running regeneration.
preconfigopts = ' && '.join([
    'cd config',
    'autom4te --language=m4sh opal_get_version.m4sh -o opal_get_version.sh',
    'cd ..',
    'autoconf',
    'autoheader',
    'aclocal',
    'automake',
    ''
])

# CUDA related patches and custom configure option can be removed if CUDA support isn't wanted.
local_include = "-I$EBROOTCUDA/targets/x86_64-linux/include/cuda/std/detail/libcxx/include -I$EBROOTCUDA/nvvm/include -I$EBROOTCUDA/extras/CUPTI/include -I$EBROOTCUDA/include -I$EBROOTGCC/lib/gcc/x86_64-pc-linux-gnu/11.4.0/include"
configopts = '--with-cuda=internal '
configopts += 'CC=pgcc CXX=pgc++ FC=pgfortran '
configopts += 'CFLAGS="$CFLAGS %s" CPPFLAGS="$CPPFLAGS %s" ' % (local_include, local_include)

# disable MPI1 compatibility for now, see what breaks...
# configopts += '--enable-mpi1-compatibility '

# to enable SLURM integration (site-specific)
configopts += '--with-slurm --with-pmi=/opt/slurm/current --with-pmi-libdir=/opt/slurm/current/lib '

modextravars = {
    'SLURM_CPU_BIND_TYPE': 'cores',
    'SLURM_MPI_TYPE': 'pmi2',
    'OMPI_MCA_btl': '^openib',
    'UCX_WARN_UNUSED_ENV_VARS': 'n',
}
moduleclass = 'mpi'
