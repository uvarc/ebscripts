name = 'OpenMPI'
version = '5.0.3'

homepage = 'https://www.open-mpi.org/'
description = """The Open MPI Project is an open source MPI-3 implementation."""

toolchain = {'name': 'GCC', 'version': '13.3.0'}

source_urls = ['https://download.open-mpi.org/release/open-mpi/v%(version_major_minor)s']
sources = [SOURCELOWER_TAR_GZ]
patches = [('OpenMPI-5.0.2_build-with-internal-cuda-header.patch', 1)]

builddependencies = [
    #('pkgconf', '2.2.0'),
    #('Autotools', '20231222'),
]

dependencies = [
    ('zlib', '1.2.13'),
    ('hwloc', '2.10.0'),
    ('libevent', '2.1.12'),
    ('ucx', '1.16.0'),
    ('libfabric', '1.21.0'),
    ('pmix', '5.0.2'),
    ('prrte', '3.0.5'),
    ('ucc', '1.3.0'),
]

# CUDA related patches and custom configure option can be removed if CUDA support isn't wanted.
preconfigopts = 'gcc -Iopal/mca/cuda/include -shared opal/mca/cuda/lib/cuda.c -o opal/mca/cuda/lib/libcuda.so && '
configopts = '--with-cuda=%(start_dir)s/opal/mca/cuda --with-show-load-errors=no '
configopts += '--with-slurm'

sanity_check_paths = {
    'files': ['bin/mpirun'],
    'dirs': ['bin'],
}

modextravars = {
    'SLURM_CPU_BIND_TYPE': 'cores',
    'SLURM_MPI_TYPE': 'pmix',
    'OMPI_MCA_btl': '^openib',
    'UCX_WARN_UNUSED_ENV_VARS': 'n',
}

modluafooter = 'add_property("state","experimental")'
modloadmsg = """%(name)s %(version)s is experimental. For regular production jobs load:
gcc/11.4.0 openmpi/4.1.4"""
moduleclass = 'mpi'
